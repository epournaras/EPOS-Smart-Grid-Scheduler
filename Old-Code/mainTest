import java.util.Arrays;
import java.util.Random;
public class ScheduleListTest {
	public static void main(String[] args){
		ScheduleList itemList = new ScheduleList();
		itemList = itemList.createList();
//		Activities actionOne  = new Activities();
//		actionOne.createActivity("cooking", 45, false);
//		Activities actionTwo = new Activities();
//		actionTwo.createActivity("showering", 15, false);
//		Activities actionThree = new Activities();
//		actionThree.createActivity("charging car", 120,false);
//		Activities actionFour = new Activities();
//		actionFour.createActivity("action four", 30, false);
//		Schedule itemOne = new Schedule();
//		itemOne.createSchedule(actionOne, "14:45","18:00", 0.7);
//		Schedule itemTwo = new Schedule();
//		itemTwo.createSchedule(actionTwo, "09:00", "15:30", 0.8);
//		Schedule itemThree = new Schedule();
//		itemThree.createSchedule(actionThree, "17:00", "23:30", 0.4);
//		Schedule itemFour = new Schedule();
//		itemFour.createSchedule(actionFour, "12:00", "19:00", 0.65);

//		itemList.addScheduleItem(itemTwo);
//		itemList.addScheduleItem(itemThree);
//		itemList.addScheduleItem(itemOne);
//		itemList.addScheduleItem(itemFour);
		int n = 3;
		for(int i = 0; i < n; i++){
		  int timeOne = 0 + (int)(Math.random() * ((1199 - 0) + 1));	
		  int timeTwo = 0 + (int)(Math.random() * ((1340 - 0) + 1));
		  int timeThree = 15 + (int)(Math.random() * ((120 - 15) + 1));
		  int minTime;
		  int maxTime;
		  if(timeOne>timeTwo){	
		  		minTime = timeTwo;
		  		maxTime = timeOne;
		  }else{
		  		minTime = timeOne;
		  		maxTime = timeTwo;
		  }
		  if(maxTime-minTime<timeThree){
		  		maxTime = minTime+timeThree;
		  }
		  String maxTimeString;
		  String minTimeString;
		  int hour = maxTime/60;
		  int minute = maxTime%60;
		  if(hour<10){
		  	if(minute<10){
		  			maxTimeString = "0"+hour+":"+"0"+minute;
		 	}else{
		  			maxTimeString = "0"+hour+":"+minute;
		  	}
		  }else{
		  	if(minute<10){
		  			maxTimeString = hour+":"+"0"+minute;
		  	}else{
		  			maxTimeString = hour+":"+minute;
		  	}
		  }
		  hour = minTime/60;
		  minute = minTime%60;
		  if(hour<10){
		  	if(minute<10){
		  			minTimeString = "0"+hour+":"+"0"+minute;
		 	}else{
		 			minTimeString = "0"+hour+":"+minute;
		 	}
		  }else{
		  	if(minute<10){
		  			minTimeString = hour+":"+"0"+minute;
		  	}else{
		  			minTimeString = hour+":"+minute;
		  	}
		  }
		  Random generator = new Random();
		  double priority = generator.nextDouble();
		  int index = i+1;
//		  System.out.print(i+" "+timeThree+" "+priority+"\n");
		  if(!itemList.addScheduleItem(createSchedule(createActivite("action "+index, timeThree, true), minTimeString, maxTimeString, priority))){
			  i--;
		  }
		}
//		System.out.print("stage one over\n"); 
		Schedule[][] arrangements = new Schedule[1][];
		arrangements = itemList.createPossibleLists();
//		System.out.print("Stage Two over \n");
		int random = (int )(Math. random() * (arrangements.length-1));
		System.out.print(arrangements.length+"\n");
	
		int[] indiciesInOrder = new int[arrangements[random].length];
	    int[] minTimesInOrder = new int[arrangements[random].length];

	    for(int p = 0; p<arrangements[random].length; p++){
	        minTimesInOrder[p] = arrangements[random][p].minTime;
	    }
	    Arrays.sort(minTimesInOrder);

	    for(int o = 0; o<minTimesInOrder.length;o++) {
	        boolean found = false;
	        for (int k = 0; k < arrangements[random].length && !found; k++) {
	        	if(minTimesInOrder[o]==arrangements[random][k].minTime){
	        		indiciesInOrder[o] = k;
	        		found = true;
	        	}
	        }
	    }
	    //System.out.print("Stage Three over\n");
		for(int i = 0; i<arrangements[random].length; i++){
				
			int hour  = arrangements[random][indiciesInOrder[i]].minTime/60;
			int minute = arrangements[random][indiciesInOrder[i]].minTime%60;
			String displayMinTime;
			if(hour<10) displayMinTime = "0"+hour+":";
			else displayMinTime = hour+":";
			if(minute<10) displayMinTime += "0"+minute;
			else displayMinTime += minute;
			hour  = arrangements[random][indiciesInOrder[i]].maxTime/60;
			minute = arrangements[random][indiciesInOrder[i]].maxTime%60;
			String displayMaxTime;
			if(hour<10) displayMaxTime = "0"+hour+":";
			else displayMaxTime = hour+":";
			if(minute<10) displayMaxTime += "0"+minute;
			else displayMaxTime += minute;
			System.out.print(arrangements[random][indiciesInOrder[i]].activity.name+" "+displayMinTime+"-"+displayMaxTime+" "+arrangements[random][indiciesInOrder[i]].activity.minWindowMinutes+"\n");
		}
	}
	public static Activities createActivite(String name, int window, boolean multitask){
		Activities returnable = new Activities();
		returnable.createActivity(name, window, multitask);
		return returnable;
	}
	public static Schedule createSchedule(Activities action, String windowStart, String windowEnd, double priority){
		Schedule returnable = new Schedule();
		returnable.createSchedule(action, windowStart, windowEnd, priority);
		return returnable;
	}
}
