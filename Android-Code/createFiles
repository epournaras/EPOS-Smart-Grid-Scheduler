package com.example.application.fragment;

/**
 * Created by warrens on 31.05.17.
 */
import android.content.Context;
import android.os.AsyncTask;
import android.os.Environment;
import android.provider.Settings;

import com.example.application.MainActivity;
import com.example.schedulelibrary.Action;
import com.example.schedulelibrary.Schedule;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Created by warrens on 31.05.17.
 */

public class createFiles extends AsyncTask<String, Integer, String> {
    private String[][][] data;
    public Context context;
    public MainActivity activity;

    private String[] actionNames = {
            "cooking (Hob)",
            "cooking(Oven)",
            "Dry clothes (Tumble Dryer)",
            "Wash clothes (Washing Machine)",
            "Use Computer",
            "Boil Water (Kettle)",
            "Wash Dishes (dishwasher)",
            "Shower"
    };
    private String[] actionFileNames  ={
            "Hob",
            "Oven",
            "Tumble_Dryer",
            "Washing_Machine",
            "Computer",
            "Kettle",
            "Dishwasher",
            "Shower"};

    public createFiles(String[][][] d, Context c, MainActivity m){
        this.data = d;
        this.context = c;
        this.activity = m;
    }

    protected String doInBackground(String... a){
        storeData(data);
        return null;
    }
    protected void onProgressUpdate(Integer... a){

    }
    protected void onPostExecute(String result){

    }

    public void storeData(String[][][] a) {
        if(a.length>0){
            if(a[0].length>1){
                Action helper = new Action();
                String[] device = new String[a[0].length];

                String title = "Plan/Time,";

                for(int i = 0; i<1440;i++){
                    if(i!=1439){
                        title += helper.getTimeString(i)+",";
                    }else{
                        title += helper.getTimeString(i)+"\n";
                    }
                }
                for(int i = 0; i<device.length;i++){
                    device[i] = title;
                }

                for(int i = 0; i<a.length;i++){
                    for(int j = 0; j<a[i].length;j++){
                        int planNumber = i+1;
                        device[j]+="Plan "+planNumber+",";
                        for(int q = 0; q<a[i][j].length;q++){
                            if(q<a[i][j].length-1){
                                device[j]+=a[i][j][q]+",";
                            }else{
                                device[j]+=a[i][j][q]+"\n";
                            }
                        }
                    }
                }

                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd-MM-yyyy-hh_mm_ss-a");
                String date = simpleDateFormat.format(new Date());

                String android_id;
                android_id = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID);
                String fileFirstHalfTitle = android_id+"-";
                String setup = "0";

                try {
                    FileInputStream fisPSched = context.openFileInput("PastSchedules.txt");
                    int ch;
                    StringBuilder builder = new StringBuilder();
                    while ((ch = fisPSched.read()) != -1) {
                        char s = (char) ch;
                        String st = "" + s;
                        if (!st.equals(null)) {
                            builder.append((char) ch);
                        }
                    }
                    setup = builder.toString();
                }catch(Exception e) {
                    e.printStackTrace();
                }

                int setupInt = Integer.parseInt(setup);
                setupInt++;
                String fileSecondHalfTitle = "-"+date+"-"+setupInt+".txt" ;
                String root = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getAbsolutePath();
                FileOutputStream fOut=null;
                for(int i = 0; i<device.length;i++){
                    String submitString = device[i];
                    String fileName = fileFirstHalfTitle+actionFileNames[i]+"-"+fileSecondHalfTitle;
                    File file1 = new File(root+ File.separator + fileName);
                    if(!file1.exists()) {
                        try {
                            file1.createNewFile();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                    try {
                        fOut = new FileOutputStream(file1);
                        fOut.write(submitString.getBytes());

                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                try{
                    fOut = context.openFileOutput("PastSchedules.txt", Context.MODE_PRIVATE);
                    setup = ""+setupInt;
                    fOut.write(setup.getBytes());
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }else{

        }
    }
}
